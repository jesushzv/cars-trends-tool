# Cars Trends Tool - Docker Compose Configuration
# Phase 18: Docker Deployment
#
# Services:
# - PostgreSQL database
# - Backend API (FastAPI)
# - Frontend web server (Nginx)
#
# Usage:
#   docker-compose up -d        # Start all services
#   docker-compose down         # Stop all services
#   docker-compose logs -f      # View logs
#   docker-compose ps           # Check status

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: carstrends-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-carstrends}
      POSTGRES_USER: ${POSTGRES_USER:-carstrends}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-carstrends}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-carstrends}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - carstrends-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: carstrends-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-carstrends}:${POSTGRES_PASSWORD:-carstrends}@postgres:5432/${POSTGRES_DB:-carstrends}
      PYTHONUNBUFFERED: 1
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/fb_cookies.json:/app/fb_cookies.json:ro
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - carstrends-network

  # Frontend Web Server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: carstrends-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - carstrends-network

# Named volumes for data persistence
volumes:
  postgres_data:
    name: carstrends-postgres-data
    driver: local

# Network for service communication
networks:
  carstrends-network:
    name: carstrends-network
    driver: bridge
